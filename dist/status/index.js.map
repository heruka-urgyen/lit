{"version":3,"sources":["../../components/Selector.js","../../git-utils.js","../../utils.js","../../../node_modules/parcel/src/builtins/bundle-url.js","../../../node_modules/parcel/src/builtins/bundle-loader.js","index.js","../../../node_modules/parcel/src/builtins/loaders/node/js-loader.js"],"names":["SELECTOR","Selector","isSelected","el","runCmd","params","options","gitStatus","gitCommit","cp","spawn","stdio","gitCommitFixup","hash","gitCommitAmend","gitDiff","Promise","res","rej","exec","encoding","e","stdout","gitLog","isGitRepo","statusStrToList","str","split","slice","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","resolve","code","LazyPromise","reject","loadBundles","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","executor","promise","prototype","onSuccess","onError","cliCursor","hide","preRender","lines","underline","bold","green","red","blue","yellow","chalk","hint","join","linesToRender","i","write","run","on","initialLines","data","moveCursor","process","render","Status","x","default","console","error","message","fs","readFile","__dirname","setImmediate","Function"],"mappings":"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","file":"index.js","sourceRoot":"../../src/commands/status","sourcesContent":["const SELECTOR = \"❯\"\n\nexport default function Selector({isSelected, el}) {\n  return ` ${isSelected ? SELECTOR : \" \"} ${el}`\n}\n","import cp from \"child_process\"\nimport {spawn} from \"node-pty\"\n\nexport const runCmd = ({params = [], options}) => spawn(\"git\", params, options)\n\nexport const gitStatus = () => runCmd({\n  params: [\"-c\", \"color.ui=always\", \"status\", \"-s\", \"-u\"],\n})\n\nexport const gitCommit =\n  (params = []) => cp.spawn(\"git\", [\"commit\", ...params], {stdio: \"inherit\"})\n\nexport const gitCommitFixup = hash => gitCommit([\"--fixup\", hash])\n\nexport const gitCommitAmend = () => gitCommit([\"--amend\"])\n\nexport const gitDiff = () => new Promise(\n  (res, rej) => cp.exec(\n    \"git diff --cached --name-only\",\n    {encoding: \"utf8\"},\n    (e, stdout) => e ? rej(e) : res(stdout),\n  ),\n)\n\nexport const gitLog = () => new Promise(\n  (res, rej) => cp.exec(\n    \"git log --color=always --format=\" +\n    \"'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\",\n    {encoding: \"utf8\"},\n    (e, stdout) => e ? rej(e) : res(stdout),\n  ),\n)\n\nexport const isGitRepo = () => new Promise(\n  (res, rej) => cp.exec(\n    \"git rev-parse --is-inside-work-tree\",\n    {encoding: \"utf8\"},\n    (e, stdout) => e ? rej(e) : res(stdout),\n  ),\n)\n","/* eslint-disable import/prefer-default-export */\n\nexport const statusStrToList = str => str.split(\"\\n\").slice(0, -1)\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","/* eslint-disable import/prefer-default-export */\n\nimport process from \"process\"\nimport readline from \"readline\"\n\nimport React from \"react\"\nimport cliCursor from \"cli-cursor\"\nimport chalk from \"chalk\"\n\nimport Selector from \"components/Selector\"\nimport {isGitRepo, gitStatus} from \"git-utils\"\nimport {statusStrToList} from \"utils\"\n\ncliCursor.hide()\n\nexport const preRender = lines => {\n  const {underline, bold, green, red, blue, yellow} = chalk\n  const hint = [\n    ` ${underline(bold(green(\"s\")))}tage | `,\n    `${underline(bold(red(\"r\")))}eset | `,\n    `check${underline(bold(red(\"o\")))}ut | `,\n    `${underline(bold(blue(\"c\")))}ommit | `,\n    `${underline(bold(blue(\"a\")))}mend | `,\n    `${underline(bold(blue(\"f\")))}ixup | `,\n    `${underline(bold(yellow(\"q\")))}uit`,\n  ].join(\"\")\n\n  const linesToRender = lines.map((el, i) => Selector({isSelected: i === 0, el}))\n\n  process.stdout.write(\n    [\"\", hint, \"\", ...linesToRender, \"\", \"\"].join(\"\\n\"),\n  )\n}\n\nconst run = async () => {\n  try {\n    await isGitRepo()\n\n    gitStatus().on(\"data\", async data => {\n      const initialLines = statusStrToList(data)\n      preRender(initialLines)\n\n      readline.moveCursor(process.stdout, -initialLines[0].length, -initialLines.length - 1)\n\n      const [{render}, Status] = await Promise.all([\n        import(\"ink\"),\n        import(\"./View.js\").then(x => x.default),\n      ])\n\n      render(<Status initialLines={initialLines} />)\n    })\n  } catch (e) {\n    console.error(e.message)\n  }\n}\n\nrun()\n","var fs = require('fs');\n\nmodule.exports = function loadJSBundle(bundle) {\n  return new Promise(function(resolve, reject) {\n    fs.readFile(__dirname + bundle, 'utf8', function(err, data) {\n      if (err) {\n        reject(err);\n      } else {\n        // wait for the next event loop iteration, so we are sure\n        // the current module is fully loaded\n        setImmediate(function() {\n          resolve(data);\n        });\n      }\n    });\n  })\n  .then(function(code) {\n    new Function('', code)();\n  });\n};\n"]}